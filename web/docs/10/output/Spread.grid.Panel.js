Ext.data.JsonP.Spread_grid_Panel({"extends":"Ext.grid.Panel","enum":null,"html_meta":{},"meta":{},"linenr":1,"inheritable":null,"aliases":{"widget":["spread"]},"singleton":false,"subclasses":[],"component":false,"mixins":[],"inheritdoc":null,"statics":{"cfg":[],"property":[],"css_var":[],"method":[],"event":[],"css_mixin":[]},"files":[{"href":"Panel.html#Spread-grid-Panel","filename":"Panel.js"}],"mixedInto":[],"superclasses":["Ext.grid.Panel"],"members":{"cfg":[{"meta":{},"owner":"Spread.grid.Panel","name":"autoCommit","id":"cfg-autoCommit","tagname":"cfg"},{"meta":{},"owner":"Spread.grid.Panel","name":"autoFocusRootPosition","id":"cfg-autoFocusRootPosition","tagname":"cfg"},{"meta":{},"owner":"Spread.grid.Panel","name":"copyablePluginInstance","id":"cfg-copyablePluginInstance","tagname":"cfg"},{"meta":{},"owner":"Spread.grid.Panel","name":"editModeStyling","id":"cfg-editModeStyling","tagname":"cfg"},{"meta":{},"owner":"Spread.grid.Panel","name":"editable","id":"cfg-editable","tagname":"cfg"},{"meta":{},"owner":"Spread.grid.Panel","name":"editablePluginInstance","id":"cfg-editablePluginInstance","tagname":"cfg"},{"meta":{},"owner":"Spread.grid.Panel","name":"enableKeyNav","id":"cfg-enableKeyNav","tagname":"cfg"},{"meta":{},"owner":"Spread.grid.Panel","name":"pasteablePluginInstance","id":"cfg-pasteablePluginInstance","tagname":"cfg"}],"property":[{"meta":{"private":true},"owner":"Spread.grid.Panel","name":"columnLines","id":"property-columnLines","tagname":"property"},{"meta":{"private":true},"owner":"Spread.grid.Panel","name":"viewType","id":"property-viewType","tagname":"property"}],"css_var":[],"method":[{"meta":{},"owner":"Spread.grid.Panel","name":"constructor","id":"method-constructor","tagname":"method"},{"meta":{"protected":true},"owner":"Spread.grid.Panel","name":"initColumns","id":"method-initColumns","tagname":"method"},{"meta":{"protected":true},"owner":"Spread.grid.Panel","name":"initComponent","id":"method-initComponent","tagname":"method"},{"meta":{},"owner":"Spread.grid.Panel","name":"isEditable","id":"method-isEditable","tagname":"method"},{"meta":{"protected":true},"owner":"Spread.grid.Panel","name":"manageSelectionModelConfig","id":"method-manageSelectionModelConfig","tagname":"method"},{"meta":{"protected":true},"owner":"Spread.grid.Panel","name":"manageViewConfig","id":"method-manageViewConfig","tagname":"method"},{"meta":{},"owner":"Spread.grid.Panel","name":"setEditModeStyling","id":"method-setEditModeStyling","tagname":"method"},{"meta":{},"owner":"Spread.grid.Panel","name":"setEditable","id":"method-setEditable","tagname":"method"}],"event":[{"meta":{},"owner":"Spread.grid.Panel","name":"beforecopy","id":"event-beforecopy","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"beforecovercell","id":"event-beforecovercell","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"beforecoverdblclick","id":"event-beforecoverdblclick","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"beforecoverkeypressed","id":"event-beforecoverkeypressed","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"beforeeditfieldblur","id":"event-beforeeditfieldblur","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"beforeeditingdisabled","id":"event-beforeeditingdisabled","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"beforeeditingenabled","id":"event-beforeeditingenabled","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"beforehighlightcells","id":"event-beforehighlightcells","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"beforepaste","id":"event-beforepaste","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"copy","id":"event-copy","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"covercell","id":"event-covercell","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"coverdblclick","id":"event-coverdblclick","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"coverkeypressed","id":"event-coverkeypressed","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"editfieldblur","id":"event-editfieldblur","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"editingdisabled","id":"event-editingdisabled","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"editingenabled","id":"event-editingenabled","tagname":"event"},{"meta":{},"owner":"Spread.grid.Panel","name":"paste","id":"event-paste","tagname":"event"}],"css_mixin":[]},"alternateClassNames":[],"override":null,"code_type":"ext_define","private":null,"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.grid.Panel<div class='subclass '><strong>Spread.grid.Panel</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Panel.html#Spread-grid-Panel' target='_blank'>Panel.js</a></div></pre><div class='doc-contents'><h1>Ext JS 4 SpreadSheet panels</h1>\n\n<p>The grid panel class ist the most important class of Ext JS 4 Spreadsheet component.\nYou can configure all features of a Spreadsheet through the configuration of an instance of <a href=\"#!/api/Spread.grid.Panel\" rel=\"Spread.grid.Panel\" class=\"docClass\">Spread.grid.Panel</a>.</p>\n\n<h2>A Simple Spreadsheet</h2>\n\n<p>A very simple Spreadsheet example is:</p>\n\n<p><code></p>\n\n<pre><code>// Creating an instance of the Spreadsheet's grid panel\nvar spreadPanel = new <a href=\"#!/api/Spread.grid.Panel\" rel=\"Spread.grid.Panel\" class=\"docClass\">Spread.grid.Panel</a>({\n\n     // Like all grids, a Spreadsheet grid also needs a store\n     store: dataStore,\n\n     // Configure visible grid columns\n     columns: [{\n         header: 'First name',\n         dataIndex: 'firstname',\n\n         // Lets disable selection for first column\n         selectable: false\n     }, {\n         header: 'Last name',\n         renderer: function(value) {\n             return '&lt;b&gt;' + value + '&lt;/b&gt;';\n         },\n         dataIndex: 'lastname'\n     }]\n });\n</code></pre>\n\n<p></code></p>\n\n<h2>Anatomy of a Spreadsheet</h2>\n\n<p>A Spreadsheet itself consists of three main classes:</p>\n\n<ul>\n    <li>\n        <u>The Panel:</u> <code><a href=\"#!/api/Spread.grid.Panel\" rel=\"Spread.grid.Panel\" class=\"docClass\">Spread.grid.Panel</a></code><br />\n        <br />\n        This is the master class of a Spreadsheet. All configuration belongs to this class.\n        Except the View class, you don't need to know about the internals of the other classes\n        nor their config options and events because every config option and every event is\n        relayed to the grid panel class itself.<br />\n        <br />\n        Note: After instantiation of a grid, it's possible to access the View and Selection Model instances\n        by calling <code>gridPanelInstance.getView()</code> and <code>gridPanelInstance.getSelectionModel()</code>.\n        <br />\n        <br />\n        xtype: <code>spread</code>\n        <br />\n        <br />\n    </li>\n    <li>\n        <u>The View:</u> <code><a href=\"#!/api/Spread.grid.View\" rel=\"Spread.grid.View\" class=\"docClass\">Spread.grid.View</a></code><br />\n        <br />\n        The view class extends a standard Ext.grid.View. It implements method to renders all spreadsheet-specific UI\n        elements. It also handles all UI specific events for focusing and selecting cells.\n\n        The view of a Spreadsheet comes with it's own plugin architecture.\n        Features like <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a>, <a href=\"#!/api/Spread.grid.plugin.Copyable\" rel=\"Spread.grid.plugin.Copyable\" class=\"docClass\">Spread.grid.plugin.Copyable</a> and <a href=\"#!/api/Spread.grid.plugin.Pasteable\" rel=\"Spread.grid.plugin.Pasteable\" class=\"docClass\">Spread.grid.plugin.Pasteable</a>\n        are loosely coupled with the view instance itself. By default, you never need to care about them, because:\n        <br />\n        - All config options of the grid view are available via the grid panel's <code>viewConfig</code> object too<br />\n        - All view class events are available through the grid panel class too\n        <br />\n        <br />\n        xtype: <code>spreadview</code>\n        <br />\n        <br />\n    </li>\n    <li>\n        <u>The Selection Model:</u> <code><a href=\"#!/api/Spread.selection.RangeModel\" rel=\"Spread.selection.RangeModel\" class=\"docClass\">Spread.selection.RangeModel</a></code><br />\n        <br />\n        The selection model implements all the logic (key/mouse navigation, key/mouse selection) required for\n        making focusing and selection feels like using a native spreadsheet application.\n\n        By default, you never need to care about the selection model, because:<br />\n        - All config options of this selection model are available through on the grid panel class too<br />\n        - All selecton model events are available on the grid panel class too\n        <br />\n        <br />\n        xtype: <code>range</code>\n        <br />\n        <br />\n    </li>\n</ul>\n\n\n<h2>Grid view customization</h2>\n\n<p>Like in any standard Ext JS grid you can customize the configuration of the grid's view using the <code>viewConfig</code>\nconfiguration option:</p>\n\n<p><code></p>\n\n<pre><code>   ...\n   // A config, relayed to <a href=\"#!/api/Spread.grid.View\" rel=\"Spread.grid.View\" class=\"docClass\">Spread.grid.View</a>.\n   // Shows\n   viewConfig: {\n       stripeRows: true\n   },\n  ...\n</code></pre>\n\n<p>   </code></p>\n\n<h2>Using the special header column <code><a href=\"#!/api/Spread.grid.column.Header\" rel=\"Spread.grid.column.Header\" class=\"docClass\">Spread.grid.column.Header</a></code></h2>\n\n<p>Next to all standard grid columns you can configure a spreadsheet to contain one or more spreadsheet header columns.\nHeader columns are non-selectable and non-editable and belong to the dataIndex 'id' by default.</p>\n\n<p>Like any other grid column, add the spreadheadercolumn instance configuration(s) to the Grid panel's column-configuration:</p>\n\n<p><code></p>\n\n<pre><code>   ...\n\n   columns: [{\n        xtype: 'spreadheadercolumn',\n        header: 'ID',\n        dataIndex: 'id' // default value\n   }, ...],\n\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<br />\n\n\n<p>xtype: <code>spreadheadercolumn</code></p>\n\n<h2>Customizing grid cell selection: <code><a href=\"#!/api/Spread.selection.RangeModel\" rel=\"Spread.selection.RangeModel\" class=\"docClass\">Spread.selection.RangeModel</a></code></h2>\n\n<p>The special Range Selection Model that comes with Ext JS 4 SpreadSheet is the heart of the SpreadSheet implementation.\nIt implements the logic behind the native-like feeling when using the SpreadSheet grid. There are two configurations\npossible then configuring the selection model:</p>\n\n<ul>\n    <li><code>autoFocusRootPosition</code> (default: true) &ndash; Automatically focuses the top- and -left-most cell which is selectable after view rendering</li>\n    <li><code>enableKeyNav</code> (default: true) &ndash; En-/disabled the navigation using arrow keys, shift key + arrow keys</li>\n</ul>\n\n\n<p>You can simply set these both options on the grid panel instance.</p>\n\n<h3>Disabling selection of cells of specific columns</h3>\n\n<p>If you'd like to disable the cells of a column from being selected by the user, just set the <code>selectable</code> flag to <code>false</code>.</p>\n\n<p>   <code></p>\n\n<pre><code>   ...\n   columns: [{\n       header: 'Firstname',\n       dataIndex: 'firstname',\n       selectable: false,\n       ...\n   }, ...],\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<p><strong>Note: Instead of header columns, all columns in a spreadsheet grid are selectable by  because of <code>Spread.grid.overrides.Column</code>.</strong></p>\n\n<br />\n\n\n<p>xtype: <code>range</code></p>\n\n<h2>Editing of cells data using <code>Spread.grid.plugin.Editing</code></h2>\n\n<p>Cells of Ext JS 4 SpreadSheet can be edited like a standard Ext JS 4 grid. To gain a look and feel like using a\nnative spreadsheet application, there is a special plaintext editor getting active when start typing or double-clicking\non a grid cell. <strong>There is currently no support for Ext JS editor fields</strong> for the gain of being consistent\nwith the native spreadsheet look &amp; feel.</p>\n\n<h3>En-/disabling grid cell editing of the whole grid</h3>\n\n<p>You can enable or disable grid editing on configuration time by setting the <code>editable</code> config option:</p>\n\n<p><code></p>\n\n<pre><code>   ...\n   editable: false,\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<p>After instantiation (at runtime), you can access the SpreadSheet grid panel instance (e.g. using <code>Ext.getCmp(...)</code>)\nand call the method <code>setEditable((Boolean) isEditable)</code> to en-/disable editing at runtime:</p>\n\n<p><code></p>\n\n<pre><code>   Ext.getCmp('$gridPanelId').setEditable(false);\n</code></pre>\n\n<p>   </code></p>\n\n<p><strong>Note: Disabling editing mode globally means that editing gets disabled on all columns, ignoring what you\nconfigured for the columns before. Enabling edit mode globally means that editing gets enabled only on those\ncolumns, editing was enabled by configuration.</strong></p>\n\n<h3>Disabling editing of cells of specific columns</h3>\n\n<p>If you'd like to disable editing of cell data for a column, just set the <code>editable</code> flag to <code>false</code>.</p>\n\n<p>   <code></p>\n\n<pre><code>   ...\n   columns: [{\n       header: 'Firstname',\n       dataIndex: 'firstname',\n       editable: false,\n       ...\n   }, ...],\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<p><strong>Note: Instead of header columns, all columns in a spreadsheet grid are editable by default because of <code>Spread.grid.overrides.Column</code>.</strong></p>\n\n<h3>Colorization of editable cells</h3>\n\n<p>Ext JS 4 SpreadSheet has a special feature to colorize the cell background of cells, which are editable.\nBy default this color is light yellow (see \"Special Styling (CSS)\" section if you'd like to change this).\nYou can en-/disable this feature by setting the <code>enableEditModeStyling</code> config\noption in grid panel configuration:</p>\n\n<p><code></p>\n\n<pre><code>   ...\n   enableEditModeStyling: true, // default value\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<p><strong>Note that <code>editModeStyling</code> can cause problems when using special cell background colors.</strong></p>\n\n<h3>Advanced editing configuration</h3>\n\n<p>The editing plugin features several configuration options. If you'd like to change the editing behaviour, instantiate\nthe grid panel with <strong>a configured instance</strong> of <code>Spread.grid.plugin.Editing</code> like shown below:</p>\n\n<p><code></p>\n\n<pre><code>   ...\n\n   editablePluginInstance: Ext.create('<a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a>', {\n       editModeStyling: false, // disallows edit mode styling even if activated on columns\n       ...\n   }),\n\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<h2>Cell data pre-processor functions</h2>\n\n<p>Every column in a spreadsheet grid panel can be configured to use a custom getter and setter function\nto read data from the record to be displayed or copied (reader function) or to pre-process pasted data\nor edited values before getting written to a data record (writer function).</p>\n\n<h3>Column based cell reader function</h3>\n\n<p>Registering a cell data reader hook is easy. Simply set the <code>cellreader</code> property to a function:</p>\n\n<p><code></p>\n\n<pre><code>   ...\n   columns: [{\n       header: 'Firstname',\n       dataIndex: 'firstname',\n       cellreader: function(value, position) {\n           // transform cell data value here...\n           return value;\n       }\n       ...\n   }, ...],\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<p>As you can see, the reader function gets called with two arguments:</p>\n\n<ul>\n    <li> <code>value</code> &ndash; The data value read from cell data record field</li>\n    <li> <code>position <a href=\"#!/api/Spread.selection.Position\" rel=\"Spread.selection.Position\" class=\"docClass\">Spread.selection.Position</a></code> &ndash; The cell's position</li>\n</ul>\n\n\n<p><strong>The return value will be used for rendering cell data, value to be used in cell editor, copying cell data.</strong></p>\n\n<h3>Column based cell writer function</h3>\n\n<p>Simply set the <code>cellwriter</code> property to a function:</p>\n\n<p><code></p>\n\n<pre><code>   ...\n   columns: [{\n       header: 'Firstname',\n       dataIndex: 'firstname',\n       cellwriter: function(newValue, position) {\n           // pre-process new cell data value here before it's getting written to the data record...\n           return newValue;\n       }\n       ...\n   }, ...],\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<p>As you can see, the writer function gets called with two arguments:</p>\n\n<ul>\n    <li> <code>newValue</code> &ndash; The data value to be written to the cell data record field</li>\n    <li> <code>position <a href=\"#!/api/Spread.selection.Position\" rel=\"Spread.selection.Position\" class=\"docClass\">Spread.selection.Position</a></code> &ndash; The cell's position</li>\n</ul>\n\n\n<p><strong>The return value will be used to be written to the data record.\nThe new value may be supplied by pasting data into the cell or field editor.</strong></p>\n\n<h2>Auto-Committing of cell data on edit/paste</h2>\n\n<p>When cell data gets changed by editing or pasting data the underlaying grid row's store record can be automatically\nchanged when auto-committing is enabled on the column and the grid panel. This prevents the red arrow dirty marker\nfrom being displayed.</p>\n\n<p>Auto-committing of cell data is disabled by default on the grid panel but enabled on each grid column by default.\nThis means that you can enable auto-committing easily and globally by setting the <code>autoCommit</code> config\noption to <code>true</code> on the grid panel instance:</p>\n\n<p><code></p>\n\n<pre><code>   ...,\n   autoCommit: true,\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<h3>Disabling auto committing for specific columns</h3>\n\n<p>To disable auto committing of cell data on the cells of specific columns simply set the <code>autoCommit</code> config\noption of a grid column to <code>false</code>:</p>\n\n<p><code></p>\n\n<pre><code>   ...,\n   columns: [{\n       header: 'Lastname',\n       dataIndex: 'lastname',\n       autoCommit: false\n   }, ...],\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<h2>Advanced: Event capturing</h2>\n\n<p>In some special cases you may want to capture spreadsheet grid events to execute custom application code when needed.\nE.g. you want to execute special logic when a cell gets covered (selection of a cell happened and covering view element\nhas been rendered and placed over the specific cell).</p>\n\n<p>For such purpose you may simply add an event listener to the specific grid event using the <code>listeners</code>\nconfiguration option, bind an event handler to the instance using Ext.getCmp(...).on('covercell', function() {...})\nor use the MVC's controller infrastructure to select a component and bind it's events:</p>\n\n<p>   <code></p>\n\n<pre><code>   ...\n   listeners: {\n\n       // Simple listening to a View's event (relayed)\n       covercell: function() {\n           console.log('External listener to covercell', arguments);\n       }\n   },\n   ...\n</code></pre>\n\n<p>   </code></p>\n\n<p><strong> Note that any special spreadsheet event fired by sub-components of the grid panel: the grid's view,\neditable, pasteable and copyable plugin get relayed to the grid panel itself. So you don't need to care about these\nsub-component instances for event handling.</p>\n\n<p>To capture selection model events, call <code>grid.getSelectionModel().on('$selectionModelEventName', function() {...})</code>.\n</strong></p>\n\n<h2>Advanced: Custom styling</h2>\n\n<p>Customizing the look of the spreadsheet grid can be accomplished by changing configuration options of the <code>viewConfig</code>\nconfiguration option (see above). But if that doesn't help you may want to override CSS rules to e.g. change the color of the\nbackground color when <code>editModeStyling</code> is enabled. Therefore you would just need to include your own\nCSS stylesheet file or append a <code>style</code>-tag to the <code>head</code>-section of your web page containing something like this:</p>\n\n<p><code></p>\n\n<pre><code> .x-grid-row .spreadsheet-cell-editable .x-grid-cell-inner {\n     background-color: #cfffff;\n }\n\n .x-grid-row .spreadsheet-cell-editable-dirty .x-grid-cell-inner {\n     background-color: #cfffff;\n     background-image: url(\"dirty.gif\");\n     background-position: 0 0;\n     background-repeat: no-repeat;\n }\n</code></pre>\n\n<p>   </code></p>\n\n<p><strong>Just copy and paste the CSS selectors of resources/spread.css to change the style of your spreadsheet grid.\nEnsure to prepend your own styling rules.</strong></p>\n\n<h2>Advanced: Special copy &amp; paste behaviour customization</h2>\n\n<p>For fine tuning and in special cases you may want to change the default configuration of the pasteable and copyable\nplugins of the spreadsheet grid panel. Thanks to the dependency injection architecture of the spreadsheet grid\nimplementation you can simply create your own plugin instance and inject it into the spreadsheet grid panel instance\nconfiguration:</p>\n\n<p><code></p>\n\n<pre><code>   ...\n\n   copyablePluginInstance: Ext.create('<a href=\"#!/api/Spread.grid.plugin.Copyable\" rel=\"Spread.grid.plugin.Copyable\" class=\"docClass\">Spread.grid.plugin.Copyable</a>', {\n\n       // Overriding a method on instance level to change the keystroke for copying.\n       // Using this it's CTRL+O instead of C but only for this instance of the spreadsheet gird.\n       detectCopyKeyStroke: function(evt) {\n\n          if (evt.getKey() === evt.O &amp;&amp; evt.ctrlKey) {\n              this.copyToClipboard();\n          }\n      },\n       ...\n   }),\n\n   pasteablePluginInstance: Ext.create('<a href=\"#!/api/Spread.grid.plugin.Pasteable\" rel=\"Spread.grid.plugin.Pasteable\" class=\"docClass\">Spread.grid.plugin.Pasteable</a>', {\n       useInternalAPIs: true, // Enabling an experimental feature, much faster but dangerous\n       ...\n   }),\n\n   ...\n</code></pre>\n\n<p>   </code></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-autoCommit' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-cfg-autoCommit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-cfg-autoCommit' class='name expandable'>autoCommit</a><span> : Boolean</span></div><div class='description'><div class='short'>Automatically commit changed records or wait for manually store.sync() / record.commit()?\n(Generally, can be speciall...</div><div class='long'><p>Automatically commit changed records or wait for manually store.sync() / record.commit()?\n(Generally, can be specially configured per column config too)</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-autoFocusRootPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-cfg-autoFocusRootPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-cfg-autoFocusRootPosition' class='name expandable'>autoFocusRootPosition</a><span> : Boolean</span></div><div class='description'><div class='short'>Automatically focuses the root position initially ...</div><div class='long'><p>Automatically focuses the root position initially</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-copyablePluginInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-cfg-copyablePluginInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-cfg-copyablePluginInstance' class='name expandable'>copyablePluginInstance</a><span> : <a href=\"#!/api/Spread.grid.plugin.Copyable\" rel=\"Spread.grid.plugin.Copyable\" class=\"docClass\">Spread.grid.plugin.Copyable</a></span></div><div class='description'><div class='short'>Configured instance of an Spread.grid.plugin.Copyable plugin. ...</div><div class='long'><p>Configured instance of an <a href=\"#!/api/Spread.grid.plugin.Copyable\" rel=\"Spread.grid.plugin.Copyable\" class=\"docClass\">Spread.grid.plugin.Copyable</a> plugin.\nTo change the configuration of the plugin, you may just assign your own configured instance here.</p>\n</div></div></div><div id='cfg-editModeStyling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-cfg-editModeStyling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-cfg-editModeStyling' class='name expandable'>editModeStyling</a><span> : Boolean</span></div><div class='description'><div class='short'>Allows to style the cells when in edit mode ...</div><div class='long'><p>Allows to style the cells when in edit mode</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-editable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-cfg-editable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-cfg-editable' class='name expandable'>editable</a><span> : Boolean</span></div><div class='description'><div class='short'>Configures if the grid is in edit mode initially ...</div><div class='long'><p>Configures if the grid is in edit mode initially</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-editablePluginInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-cfg-editablePluginInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-cfg-editablePluginInstance' class='name expandable'>editablePluginInstance</a><span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a></span></div><div class='description'><div class='short'>Configured instance of an Spread.grid.plugin.Editable plugin. ...</div><div class='long'><p>Configured instance of an <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a> plugin.\nTo change the configuration of the plugin, you may just assign your own configured instance here.</p>\n</div></div></div><div id='cfg-enableKeyNav' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-cfg-enableKeyNav' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-cfg-enableKeyNav' class='name expandable'>enableKeyNav</a><span> : Boolean</span></div><div class='description'><div class='short'>Turns on/off keyboard navigation within the grid. ...</div><div class='long'><p>Turns on/off keyboard navigation within the grid.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-pasteablePluginInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-cfg-pasteablePluginInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-cfg-pasteablePluginInstance' class='name expandable'>pasteablePluginInstance</a><span> : <a href=\"#!/api/Spread.grid.plugin.Pasteable\" rel=\"Spread.grid.plugin.Pasteable\" class=\"docClass\">Spread.grid.plugin.Pasteable</a></span></div><div class='description'><div class='short'>Configured instance of an Spread.grid.plugin.Pasteable plugin. ...</div><div class='long'><p>Configured instance of an <a href=\"#!/api/Spread.grid.plugin.Pasteable\" rel=\"Spread.grid.plugin.Pasteable\" class=\"docClass\">Spread.grid.plugin.Pasteable</a> plugin.\nTo change the configuration of the plugin, you may just assign your own configured instance here.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-columnLines' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-property-columnLines' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-property-columnLines' class='name expandable'>columnLines</a><span> : Boolean</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'>Show column lines by default ...</div><div class='long'><p>Show column lines by default</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-viewType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-property-viewType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-property-viewType' class='name expandable'>viewType</a><span> : String</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'>use spread view ...</div><div class='long'><p>use spread view</p>\n<p>Defaults to: <code>'spreadview'</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Spread.grid.Panel-method-constructor' class='name expandable'>Spread.grid.Panel</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/Spread.grid.Panel\" rel=\"Spread.grid.Panel\" class=\"docClass\">Spread.grid.Panel</a></div><div class='description'><div class='short'>Pre-process the column configuration to avoid incompatibilities ...</div><div class='long'><p>Pre-process the column configuration to avoid incompatibilities</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Spread.grid.Panel\" rel=\"Spread.grid.Panel\" class=\"docClass\">Spread.grid.Panel</a></span><div class='sub-desc'><p>void</p>\n</div></li></ul></div></div></div><div id='method-initColumns' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-method-initColumns' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-method-initColumns' class='name expandable'>initColumns</a>( <span class='pre'></span> )<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Initializes the columns by referencing the view onto them ...</div><div class='long'><p>Initializes the columns by referencing the view onto them</p>\n</div></div></div><div id='method-initComponent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-method-initComponent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-method-initComponent' class='name expandable'>initComponent</a>( <span class='pre'></span> )<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Initialize the columns before rendering them ...</div><div class='long'><p>Initialize the columns before rendering them</p>\n</div></div></div><div id='method-isEditable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-method-isEditable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-method-isEditable' class='name expandable'>isEditable</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Returns true if grid is in edit mode ...</div><div class='long'><p>Returns true if grid is in edit mode</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-manageSelectionModelConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-method-manageSelectionModelConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-method-manageSelectionModelConfig' class='name expandable'>manageSelectionModelConfig</a>( <span class='pre'>config</span> )<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Simply merges the selection model specific options into the selModel configuration dynamically. ...</div><div class='long'><p>Simply merges the selection model specific options into the selModel configuration dynamically.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>Grid config object</p>\n</div></li></ul></div></div></div><div id='method-manageViewConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-method-manageViewConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-method-manageViewConfig' class='name expandable'>manageViewConfig</a>( <span class='pre'>config</span> )<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Pays attention to the fact that the developer could define an own viewConfig,\nso we need to merge-in our spreadPlugin...</div><div class='long'><p>Pays attention to the fact that the developer could define an own viewConfig,\nso we need to merge-in our spreadPlugins array (apply the defaults)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>Grid config object</p>\n</div></li></ul></div></div></div><div id='method-setEditModeStyling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-method-setEditModeStyling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-method-setEditModeStyling' class='name expandable'>setEditModeStyling</a>( <span class='pre'>editModeStyling</span> )</div><div class='description'><div class='short'>Enables/Disables the edit mode styling on the whole grid ...</div><div class='long'><p>Enables/Disables the edit mode styling on the whole grid</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editModeStyling</span> : Boolean<div class='sub-desc'><p>Allow edit mode styling?</p>\n</div></li></ul></div></div></div><div id='method-setEditable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-method-setEditable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-method-setEditable' class='name expandable'>setEditable</a>( <span class='pre'>allowEditing</span> )</div><div class='description'><div class='short'>Enables/Disables editing grid-wide (overriding the column configuration at runtime) ...</div><div class='long'><p>Enables/Disables editing grid-wide (overriding the column configuration at runtime)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>allowEditing</span> : Boolean<div class='sub-desc'><p>Is editing allowed?</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-beforecopy' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-beforecopy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-beforecopy' class='name expandable'>beforecopy</a>( <span class='pre'>copyable, selModel, selections, eOpts</span> )</div><div class='description'><div class='short'>Fires before a copy action happens. ...</div><div class='long'><p>Fires before a copy action happens. Return false in listener to stop the event processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>copyable</span> : <a href=\"#!/api/Spread.grid.plugin.Copyable\" rel=\"Spread.grid.plugin.Copyable\" class=\"docClass\">Spread.grid.plugin.Copyable</a><div class='sub-desc'><p>Copyable plugin instance</p>\n</div></li><li><span class='pre'>selModel</span> : <a href=\"#!/api/Spread.selection.RangeModel\" rel=\"Spread.selection.RangeModel\" class=\"docClass\">Spread.selection.RangeModel</a><div class='sub-desc'><p>Selection model instance</p>\n</div></li><li><span class='pre'>selections</span> : Array<div class='sub-desc'><p>Array of selected positions</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforecovercell' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-beforecovercell' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-beforecovercell' class='name expandable'>beforecovercell</a>( <span class='pre'>view, position, coverEl, eOpts</span> )</div><div class='description'><div class='short'>Fires before a cell gets covered visually. ...</div><div class='long'><p>Fires before a cell gets covered visually. Return false in listener to stop the event processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : <a href=\"#!/api/Spread.grid.View\" rel=\"Spread.grid.View\" class=\"docClass\">Spread.grid.View</a><div class='sub-desc'><p>Spread view instance</p>\n</div></li><li><span class='pre'>position</span> : <a href=\"#!/api/Spread.selection.Position\" rel=\"Spread.selection.Position\" class=\"docClass\">Spread.selection.Position</a><div class='sub-desc'><p>Position to be covered</p>\n</div></li><li><span class='pre'>coverEl</span> : Ext.dom.Element<div class='sub-desc'><p>Cover element</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforecoverdblclick' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-beforecoverdblclick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-beforecoverdblclick' class='name expandable'>beforecoverdblclick</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires before a covers dbl-click action happened (starting editing). ...</div><div class='long'><p>Fires before a covers dbl-click action happened (starting editing). Return false in listener to stop the event processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforecoverkeypressed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-beforecoverkeypressed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-beforecoverkeypressed' class='name expandable'>beforecoverkeypressed</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires before a cover's keypress-click action happened (starting editing). ...</div><div class='long'><p>Fires before a cover's keypress-click action happened (starting editing). Return false in listener to stop the event processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeeditfieldblur' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-beforeeditfieldblur' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-beforeeditfieldblur' class='name expandable'>beforeeditfieldblur</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires before a edit field gets blur()'ed. ...</div><div class='long'><p>Fires before a edit field gets blur()'ed. Return false in listener to stop the event processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeeditingdisabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-beforeeditingdisabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-beforeeditingdisabled' class='name expandable'>beforeeditingdisabled</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires before editing gets generally deactivated. ...</div><div class='long'><p>Fires before editing gets generally deactivated. Return false in listener to stop the event processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeeditingenabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-beforeeditingenabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-beforeeditingenabled' class='name expandable'>beforeeditingenabled</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires before editing gets generally activated. ...</div><div class='long'><p>Fires before editing gets generally activated. Return false in listener to stop the event processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforehighlightcells' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-beforehighlightcells' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-beforehighlightcells' class='name expandable'>beforehighlightcells</a>( <span class='pre'>view, positions, eOpts</span> )</div><div class='description'><div class='short'>Fires when a range of cells got highlighted visually. ...</div><div class='long'><p>Fires when a range of cells got highlighted visually.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : <a href=\"#!/api/Spread.grid.View\" rel=\"Spread.grid.View\" class=\"docClass\">Spread.grid.View</a><div class='sub-desc'><p>Spread view instance</p>\n\n</div></li><li><span class='pre'>positions</span> : Array<div class='sub-desc'><p>Array of selection positions identifying cells</p>\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforepaste' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-beforepaste' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-beforepaste' class='name expandable'>beforepaste</a>( <span class='pre'>pasteable, selModel, selections, eOpts</span> )</div><div class='description'><div class='short'>Fires before a paste action happens. ...</div><div class='long'><p>Fires before a paste action happens. Return false in listener to stop the event processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pasteable</span> : <a href=\"#!/api/Spread.grid.plugin.Pasteable\" rel=\"Spread.grid.plugin.Pasteable\" class=\"docClass\">Spread.grid.plugin.Pasteable</a><div class='sub-desc'><p>Pasteable plugin instance</p>\n</div></li><li><span class='pre'>selModel</span> : <a href=\"#!/api/Spread.selection.RangeModel\" rel=\"Spread.selection.RangeModel\" class=\"docClass\">Spread.selection.RangeModel</a><div class='sub-desc'><p>Selection model instance</p>\n</div></li><li><span class='pre'>selections</span> : Array<div class='sub-desc'><p>Array of selected positions</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-copy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-copy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-copy' class='name expandable'>copy</a>( <span class='pre'>copyable, selModel, selections, eOpts</span> )</div><div class='description'><div class='short'>Fires when a copy action happened. ...</div><div class='long'><p>Fires when a copy action happened.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>copyable</span> : <a href=\"#!/api/Spread.grid.plugin.Copyable\" rel=\"Spread.grid.plugin.Copyable\" class=\"docClass\">Spread.grid.plugin.Copyable</a><div class='sub-desc'><p>Copyable plugin instance</p>\n</div></li><li><span class='pre'>selModel</span> : <a href=\"#!/api/Spread.selection.RangeModel\" rel=\"Spread.selection.RangeModel\" class=\"docClass\">Spread.selection.RangeModel</a><div class='sub-desc'><p>Selection model instance</p>\n</div></li><li><span class='pre'>selections</span> : Array<div class='sub-desc'><p>Array of selected positions</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-covercell' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-covercell' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-covercell' class='name expandable'>covercell</a>( <span class='pre'>view, position, coverEl, eOpts</span> )</div><div class='description'><div class='short'>Fires when a cell got covered visually. ...</div><div class='long'><p>Fires when a cell got covered visually.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : <a href=\"#!/api/Spread.grid.View\" rel=\"Spread.grid.View\" class=\"docClass\">Spread.grid.View</a><div class='sub-desc'><p>Spread view instance</p>\n</div></li><li><span class='pre'>position</span> : <a href=\"#!/api/Spread.selection.Position\" rel=\"Spread.selection.Position\" class=\"docClass\">Spread.selection.Position</a><div class='sub-desc'><p>Position to be covered</p>\n</div></li><li><span class='pre'>coverEl</span> : Ext.dom.Element<div class='sub-desc'><p>Cover element</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-coverdblclick' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-coverdblclick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-coverdblclick' class='name expandable'>coverdblclick</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires when a covers dbl-click action happened (starting editing). ...</div><div class='long'><p>Fires when a covers dbl-click action happened (starting editing).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-coverkeypressed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-coverkeypressed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-coverkeypressed' class='name expandable'>coverkeypressed</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires when a cover's keypress-click action happened (starting editing). ...</div><div class='long'><p>Fires when a cover's keypress-click action happened (starting editing).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-editfieldblur' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-editfieldblur' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-editfieldblur' class='name expandable'>editfieldblur</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires when a edit field gets blur()'ed. ...</div><div class='long'><p>Fires when a edit field gets blur()'ed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-editingdisabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-editingdisabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-editingdisabled' class='name expandable'>editingdisabled</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires when editing gets generally deactivated. ...</div><div class='long'><p>Fires when editing gets generally deactivated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-editingenabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-editingenabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-editingenabled' class='name expandable'>editingenabled</a>( <span class='pre'>editable, eOpts</span> )</div><div class='description'><div class='short'>Fires when editing gets generally activated. ...</div><div class='long'><p>Fires when editing gets generally activated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Spread.grid.plugin.Editable\" rel=\"Spread.grid.plugin.Editable\" class=\"docClass\">Spread.grid.plugin.Editable</a><div class='sub-desc'><p>Editable plugin instance</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-paste' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spread.grid.Panel'>Spread.grid.Panel</span><br/><a href='source/Panel.html#Spread-grid-Panel-event-paste' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Spread.grid.Panel-event-paste' class='name expandable'>paste</a>( <span class='pre'>pasteable, selModel, selections, pastedData, eOpts</span> )</div><div class='description'><div class='short'>Fires when a paste action happened. ...</div><div class='long'><p>Fires when a paste action happened.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pasteable</span> : <a href=\"#!/api/Spread.grid.plugin.Pasteable\" rel=\"Spread.grid.plugin.Pasteable\" class=\"docClass\">Spread.grid.plugin.Pasteable</a><div class='sub-desc'><p>Pasteable plugin instance</p>\n</div></li><li><span class='pre'>selModel</span> : <a href=\"#!/api/Spread.selection.RangeModel\" rel=\"Spread.selection.RangeModel\" class=\"docClass\">Spread.selection.RangeModel</a><div class='sub-desc'><p>Selection model instance</p>\n</div></li><li><span class='pre'>selections</span> : Array<div class='sub-desc'><p>Array of selected positions</p>\n</div></li><li><span class='pre'>pastedData</span> : Array<div class='sub-desc'><p>Array of pasted data</p>\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div></div></div></div></div>","parentMixins":[],"name":"Spread.grid.Panel","uses":[],"id":"class-Spread.grid.Panel","tagname":"class","requires":[]});